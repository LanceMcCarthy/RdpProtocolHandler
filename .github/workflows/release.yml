name: Release

on:
  workflow_dispatch:
  push:
    branches: [ release ]
    paths: [ 'src/**/*', '.github/workflows/ci.yml' ]

jobs:
  build_console:
    runs-on: windows-latest
    env:
      RID: win-x64
      SLN_PATH: src/RdpProtocolHandler.sln
      CSPROJ_PATH: src/RdpProtocolHandler/RdpProtocolHandler.csproj
      BUILD_CONFIGURATION: Release

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Install .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '7.0'

    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1.1.3

    - name: Generate version number with date and workflow Run Number
      id: version-creator
      run: |
        $buildDay = Get-Date -Format "yyyy.Mdd"
        $runNumber = "$env:GITHUB_RUN_NUMBER"
        $ver = $buildDay + "." + $runNumber + ".0"
        echo "::set-output name=APP_VERSION::$ver"
    
    - name: Update app's assembly version
      run: |
        function SetAssemblyFileVersion([string]$pathToFile, [string]$newVersion) {
          $newFile = Get-Content $pathToFile -encoding "UTF8" | foreach-object {
            if ($_.StartsWith("[assembly: AssemblyFileVersion")) {
              $verStart = $_.IndexOf("(")
              $verEnd = $_.IndexOf(")", $verStart)
              $origVersion = $_.SubString($verStart+2, $verEnd-$verStart-3)
              $newVersion = "${{ steps.version-creator.outputs.APP_VERSION }}"
              write-host "Setting AssemblyFileVersion from $origVersion to $newVersion"
              $_.Replace($origVersion, $newVersion)
            }  else {
              $_
            }
          }
          $newfile | Set-Content $assemblyInfoPath -encoding "UTF8"
        }
        $assemblyInfoPath = "src\RdpProtocolHandler\Properties\AssemblyInfo.cs"
        SetAssemblyFileVersion $assemblyInfoPath "${{ steps.version-creator.outputs.APP_VERSION }}"
   
    - name: Install NuGet packages
      run: dotnet restore ${{ env.CSPROJ_PATH }} --runtime ${{ env.RID }}

    - name: Restore project dependencies
      run: msbuild ${{ env.CSPROJ_PATH }} /t:Restore /p:Configuration=${{ env.BUILD_CONFIGURATION }}

    - name: Build project
      run: msbuild ${{ env.CSPROJ_PATH }} /p:Configuration=${{ env.BUILD_CONFIGURATION }} /p:RuntimeIdentifier=${{ env.RID }}

    - uses: actions/upload-artifact@v3
      with:
        name: app
        path: src/RdpProtocolHandler/bin/Release

    # ***** GitHub Release ***** #

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: "v.${{ steps.version-creator.outputs.APP_VERSION }}.${{  env.GITHUB_RUN_ID }}"
        release_name: "Release ${{ steps.version-creator.outputs.APP_VERSION }}"
        draft: false
        prerelease: false
        body_path: .github\other\releasebody.md

    - name: Attach Release Asset
      id: upload-sideload-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: "src/RdpProtocolHandler/bin/Release/"
        asset_name: "RdpProtocolHandler_${{ steps.version-creator.outputs.APP_VERSION }}_${{ env.RID }}.zip"
        asset_content_type: application/zip